@{
    ViewBag.Title = "Map Index";
}

<h2>@ViewBag.Title</h2>

<div>
    <span>Latidude</span>
    <input type="text" id ="lat" />
</div>

<div>
    <span>Longitude</span>
    <input type="text" id ="lon" />
</div>

<h2>Simple Map</h2>
<div id="simpleMap" style="width:900px;height:400px;"></div>

<h2>Map with my address plotted</h2>
<div id="myAddressPlottedMap" style="width:900px;height:400px;"></div>

<h2>Map with multiple addresses plotted</h2>
<div id="multipleAddressPlottedMap" style="width:900px;height:400px;"></div>

<script type="text/javascript"
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBrVI0ZIrpj5CzKMy1e2tdnGfP1_50I5fk&sensor=false">
</script>

<script type="text/javascript">

    var simpleMap;
    var myAddressPlottedMap;
    var multipleAddressPlottedMap;

    var geocoder;
    var infoWindow = new google.maps.InfoWindow();

    var latLonCollection = [];
    latLonCollection.push(new google.maps.LatLng(40.64510, -73.94500));
    latLonCollection.push(new google.maps.LatLng(40.67000, -73.93660));
    latLonCollection.push(new google.maps.LatLng(40.70950, -73.95630));

     
    $(function () {
              
        if (Modernizr.geolocation) {
            
            var showMap = function (position) {
                
                var coordinates = position.coords;
                var lat = coordinates.latitude;
                var lon = coordinates.longitude;
                
                $('#lat').val(lat);
                $('#lon').val(lon);

                var latLng = new google.maps.LatLng(lat, lon);
                console.log(latLng);
                
                var mapOptions = {
                    center: latLng,
                    zoom: 12,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };

                simpleMap = new google.maps.Map(document.getElementById('simpleMap'), mapOptions);
                myAddressPlottedMap = new google.maps.Map(document.getElementById('myAddressPlottedMap'), mapOptions);
                multipleAddressPlottedMap = new google.maps.Map(document.getElementById('multipleAddressPlottedMap'), mapOptions);

                var marker = new google.maps.Marker({
                    map: myAddressPlottedMap,
                    position: latLng,
                    title: 'You are here!'
                });            

                // click marker listener
                google.maps.event.addListener(marker, 'click', function() {
                    alert('clicked marker!');
                });
                
                // click simple map listener, add a marker to simple maps clicks
                google.maps.event.addListener(simpleMap, 'click', function(event) {
                    var marker = new google.maps.Marker({
                        position: event.latLng,
                        map: simpleMap
                    });
                });

                $.each(latLonCollection, function () {
                    var marker2 = new google.maps.Marker({
                        map: multipleAddressPlottedMap,
                        position: this,
                    });
                });


                /* geocoder = new google.maps.Geocoder();
                geocoder.geocode({location: latLng}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var marker = new google.maps.Marker({
                            map: myAddressPlottedMap,
                            position: results[0].geometry.location,
                            title: 'You are here!'
                        });
                    } else {
                        alert("Geocode was not successful for the following reason: " + status);
                    }
                });*/


            };

            var positionError = function (positionError) {
                // Code = 1: Permission denied
                // Code = 2: Position unavailable
                // Code = 1: Timeout
                
                if (positionError.code == 1) {
                    // user said no
                }
                alert('Ooops! Error: ' + positionError.code);
            };

            navigator.geolocation.getCurrentPosition(showMap, positionError);
            
        } else {
            // no native support, implement fallback
            // To Do: Ask for zipcode or address, or allow option to not use geolocation
        }

        $('#topMenu .home').addClass('active');

    });   

</script>